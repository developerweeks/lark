<?php
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme_suggestions_input_alter().
 * */
function lark_theme_suggestions_input_alter(&$suggestions, array $variables) {
  $element = $variables['element'];
  if (isset($element['#attributes']['data-twig-suggestion'])) {
    $suggestion_suffix = str_replace(['-'], '_', $element['#attributes']['data-twig-suggestion']);
    $suggestions[] = 'input__' . $element['#type'] . '__' . $suggestion_suffix;
  }
}

/**
 * Implements hook_form_alter().
 */
function lark_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  foreach (\Drupal\Core\Render\Element::children($form) as $key) {
    $form[$key]['#attributes']['data-twig-suggestion'] = $form['#id'];
  }

  $form['actions']['submit']['#attributes']['data-twig-suggestion'] = $form['#id'];
}

/**
 * Implements hook_template_preprocess_form_element().
 */
function lark_template_preprocess_form_element(&$variables) {
  $element = $variables['element'];

  // @TODO: Here we should programatically set all the checkbox label positions to after the checkbox so we can style them using the + selector in CSS.
}


/**
 * Implements hook_theme_suggestions_form_element().
 */
function themable_forms_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form_element__type__' . $variables['element']['#type'];

  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form_element__form_id__' . $variables['element']['#form_id'];
    $suggestions[] = 'form_element__' . $variables['element']['#form_id'] . '__' . $variables['element']['#type'];
  }

  if (isset($variables['element']['#views_display_id'])) {
    $suggestions[] = 'form_element__' . $variables['element']['#form_id'] . '__' . $variables['element']['#views_display_id'];
    $suggestions[] = 'form_element__' . $variables['element']['#form_id'] . '__' . $variables['element']['#views_display_id'] . '__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_theme_suggestions_form_element_label().
 */
function lark_forms_theme_suggestions_form_element_label_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#form_element_type'])) {
    $suggestions[] = 'form_element_label__type__' . $variables['element']['#form_element_type'];
  }
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form_element_label__form-id__' . $variables['element']['#form_id'];
  }
  if (isset($variables['element']['#form_element_type']) && isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form_element_label__' . $variables['element']['#form_id'] . '__' . $variables['element']['#form_element_type'];
  }
  if (isset($variables['element']['#views_display_id'])) {
    $suggestions[] = 'form_element_label__views_exposed_form__' . $variables['element']['#views_display_id'];
  }
  if (isset($variables['element']['#views_display_id']) && isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form_element_label__views_exposed_form__' . $variables['element']['#views_display_id'] . '__' . $variables['element']['#form_element_type'];
  }

}

/**
 * Implements hook_preprocess_form_element().
 */
function lark_forms_preprocess_form_element(array &$variables) {
  if (!isset($variables['label'])) {
    return;
  }

  if (isset($variables['element']['#form_id'])) {
    $variables['label']['#form_id'] = $variables['element']['#form_id'];
  }
  if (isset($variables['element']['#type'])) {
    $variables['label']['#form_element_type'] = $variables['element']['#type'];
  }
  if (isset($variables['element']['#views_display_id'])) {
    $variables['label']['#views_display_id'] = $variables['element']['#views_display_id'];
  }
}

/**
 * Implements hook_form_alter().
 */
function lark_forms_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  lark_forms_attach_form_id($form, $form_id);
  if ($form_id === 'views_exposed_form') {
    $display_id = str_replace('views-exposed-form-', '', $form['#id']);
    $display_id = str_replace('-', '_', $display_id);
    lark_forms_attach_views_display_id($form, $display_id);
  }
}

/**
 * Attaches form id to all form elements.
 *
 * @param $form
 *   The form or form element which children should have form id attached.
 * @param $form_id
 *   The form id attached to form elements.
 *
 * @return array
 */
function lark_forms_attach_form_id(&$form, $form_id) {
  foreach (Element::children($form) as $child) {
    if (!isset($form[$child]['#form_id'])) {
      $form[$child]['#form_id'] = $form_id;
    }
    lark_forms_attach_form_id($form[$child], $form_id);
  }
}

/**
 * Attaches views display id to all form elements
 *
 * @param $form
 *   The form or form element which children should have views display id attached.
 * @param $views_display_id
 *   The views display id attached to form elements.
 *
 */
function lark_forms_attach_views_display_id(&$form, $views_display_id) {
  foreach (Element::children($form) as $child) {
    if (!isset($form[$child]['#views_display_id'])) {
      $form[$child]['#views_display_id'] = $views_display_id;
    }
    lark_forms_attach_views_display_id($form[$child], $views_display_id);
  }
}
